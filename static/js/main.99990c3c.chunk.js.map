{"version":3,"sources":["components/Nav.js","utils/API.js","components/Searchform.js","components/TableColumns.js","components/TableResults.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","API","getFromAPI","axios","get","Searchform","props","htmlFor","size","type","placeholder","name","id","value","search","onChange","handleInputChange","TableColumns","scope","data-column","onClick","handleSort","style","cursor","TableResults","empInfos","map","empObj","alt","src","picture","flname","nat","contact","email","string","dob","Date","toLocaleDateString","year","month","day","key","Results","state","empRoster","empFilter","AllEmp","a","then","res","data","results","result","login","uuid","large","first","last","location","country","cell","date","catch","err","console","log","componentDidMount","setState","event","target","toLowerCase","filter","includes","empSearchList","colClick","getAttribute","sorted","e","sort","b","this","Component","App","Table","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99990c3c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-dark justify-content-center align-items-center text-white p-5 \">\r\n      <h1>Employee Directory</h1>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import axios from \"axios\";\r\n\r\nconst APIURL = \"https://randomuser.me/api/?results=10&nat=us,dk,es,fi,fr,gb,ie,nl,nz,tr\";\r\n\r\nconst API = {\r\n  getFromAPI: function () {\r\n    return axios.get(APIURL);\r\n  },\r\n};\r\n\r\nexport default API;","import React from \"react\";\r\n\r\nfunction Searchform(props) {\r\n  return (\r\n    <div className=\"bg-dark d-flex text-white \">\r\n      <div className=\"col\">\r\n        <div className=\"row justify-content-center \">\r\n          <label htmlFor=\"language\">\r\n            Type in a name inside this search box\r\n          </label>\r\n        </div>\r\n        <div className=\"row justify-content-center \">\r\n          <form className=\"search\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                size=\"27\"\r\n                type=\"text\"\r\n                placeholder=\"eg. John Doe\"\r\n                name=\"search\"\r\n                id=\"search\"\r\n                value={props.search}\r\n                onChange={props.handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchform;\r\n","import React from \"react\";\r\n\r\nfunction TableColumns(props) {\r\n  return (\r\n    <thead className=\"table-success\">\r\n            <tr>\r\n              <th scope=\"col\">Display Picture</th>\r\n              <th scope=\"col\" data-column=\"flname\" onClick={props.handleSort} style={{ cursor: 'pointer' }}>Name(First, Last)</th>\r\n              <th scope=\"col\" data-column=\"nat\" onClick={props.handleSort} style={{ cursor: 'pointer' }}>Nationality(Country Code/Country)</th>\r\n              <th scope=\"col\">Phone</th>\r\n              <th scope=\"col\" data-column=\"email\" onClick={props.handleSort} style={{ cursor: 'pointer' }}>Email</th>\r\n              <th scope=\"col\">DOB</th>\r\n            </tr>\r\n          </thead>\r\n  );\r\n}\r\n\r\nexport default TableColumns;\r\n","import React from \"react\";\r\n\r\n// https://stackoverflow.com/questions/50430968/converting-string-date-in-react-javascript\r\nfunction formatDate(string) {\r\n  var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n  return new Date(string).toLocaleDateString([], options);\r\n}\r\n\r\nfunction TableResults(props) {\r\n  return (\r\n    <tbody>\r\n      {props.empInfos.map((empObj) => (\r\n        <tr key={empObj.key}>\r\n          <th scope=\"row\">\r\n            <img alt=\"Employee Display\" src={empObj.picture} className=\"img-fluid shadow-lg p-3 mb-3 bg-white rounded\" />\r\n          </th>\r\n          <td>\r\n            {empObj.flname}\r\n          </td>\r\n          <td>\r\n            {empObj.nat}\r\n          </td>\r\n          <td>{empObj.contact}</td>\r\n          <td>{empObj.email}</td>\r\n          <td>{formatDate(empObj.dob)}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default TableResults;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Searchform from \"./Searchform\";\r\nimport TableColumns from \"./TableColumns\";\r\nimport TableResults from \"./TableResults\";\r\n\r\nclass Results extends Component {\r\n  state = {\r\n    empRoster: [],\r\n    empFilter: [],\r\n    search: \"\",\r\n    flname: 1,\r\n    nat: 1,\r\n    email: 1,\r\n  };\r\n\r\n  AllEmp = async () => {\r\n    let empRoster = [];\r\n    await API.getFromAPI()\r\n      .then((res) => {\r\n        empRoster = res.data.results.map((result) => {\r\n          return {\r\n            key: result.login.uuid,\r\n            picture: result.picture.large,\r\n            flname: result.name.first + \", \" + result.name.last,\r\n            nat: result.nat + \", \" + result.location.country,\r\n            contact: result.cell,\r\n            email: result.email,\r\n            dob: result.dob.date,\r\n          };\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return empRoster;\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const empRoster = await this.AllEmp();\r\n    await this.setState({ empRoster, empFilter: empRoster });\r\n    // console.log(empRoster);\r\n  };\r\n\r\n  handleInputChange = async (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    if (value) {\r\n      const empSearchList = await this.state.empRoster.filter(\r\n        (empObj) =>\r\n          empObj.flname.toLowerCase().includes(value) ||\r\n          empObj.email.toLowerCase().includes(value)\r\n      );\r\n      await this.setState({\r\n        search: value,\r\n        empFilter: empSearchList,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSort = async (event) => {\r\n    const colClick = event.target.getAttribute(\"data-column\");\r\n    // console.log(colClick);\r\n    let sorted = this.state.empFilter.map((e) => e);\r\n    // console.log(sorted);\r\n    sorted.sort((a, b) => {\r\n      if (a[colClick] > b[colClick]) {\r\n        return 1 * this.state[colClick];\r\n      } else if (a[colClick] < b[colClick]) {\r\n        return -1 * this.state[colClick];\r\n      }\r\n      return 0;\r\n    });\r\n    this.setState({ empFilter: sorted, [colClick]: this.state[colClick] * -1 });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.empRoster);\r\n    return (\r\n      <div>\r\n        <Searchform\r\n          handleInputChange={this.handleInputChange}\r\n          search={this.search}\r\n        />\r\n        <table className=\"table table-striped table-bordered table-hover \">\r\n          <TableColumns handleSort={this.handleSort} />\r\n          <TableResults empInfos={this.state.empFilter} />\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Results;\r\n","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport Table from \"./components/Table\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}